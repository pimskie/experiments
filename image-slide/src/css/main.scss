$num-panes: 10;
$background-offset: calc(100% / calc(#{$num-panes} - 1));
$background-width: calc(#{$num-panes} * 100%);

:root {
	--image-1: url('/img/img-1.jpg');
	--image-2: url('/img/img-2.jpg');

	--animation-duration: 700ms;
	--animation-delay: 100ms;

	--num-panes: #{$num-panes};
}

html,
body {
	margin: 0;
	padding: 0;
}

.container {
	position: relative;
	// width: 600px;
	// height: 250px;
}

.ratio {
	position: relative;

	height: 0;

	display: block;

	padding-top: 30%;

	& > * {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
	}
}

.slides {
	position: absolute;

	display: flex;
	width: 100%;
	height: 100%;

	overflow: hidden;

	will-change:transform;

	&.is-front {
		--image-url: var(--image-1);
	}

	&.is-back {
		--image-url: var(--image-2);

		.slide {
			transform: translateY(100%);
		}
	}
}

.slide {
	--anim-delay: 0s;

	z-index: 10;
	flex: 1;

	will-change: transform;

	animation-duration: var(--animation-duration);
	animation-fill-mode: forwards;
	animation-timing-function: cubic-bezier(0.835, 0.325, 0.310, 1.295);

	.is-switching .is-front & {
		animation-name: out;
	}

	.is-switching .is-back & {
		animation-name: in;
	}
}

.slide__image {
	width: 100%;
	height: 100%;

	background: no-repeat top left/$background-width auto var(--image-url);
}

@for $i from 1 through $num-panes {
	.slide--#{$i} {
		$anim-delay: calc(#{$i} * var(--animation-delay));

		animation-delay: $anim-delay;

		.slide__image {
			background-position: calc(#{$background-offset} * #{$i - 1}) 0;
		}
	}
}


@keyframes in {
	0% {
		transform: translate3d(0, 100%, 0);
		filter: hue-rotate(90deg);
	}

	100% {
		transform: translate3d(0, 0, 0);
		filter: hue-rotate(0deg);
	}
}


@keyframes out {
	0% {
		transform: translate3d(0, 0%, 0);
	}

	100% {
		transform: translate3d(0, -100%, 0);
	}
}
